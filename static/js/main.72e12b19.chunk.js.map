{"version":3,"sources":["config/firebase.js","components/formulario.js","components/tablero.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Formulario","props","console","log","valoresIniciales","titulo","descripcion","useState","valores","setValores","handleChange","e","target","name","value","obtenerMedianteId","id","a","collection","doc","get","data","useEffect","idActual","Col","className","Form","onSubmit","preventDefault","agregarTarea","Group","Label","Control","autoComplete","required","type","onChange","Button","variant","size","block","Tablero","tareas","setTareas","setidActual","show","setShow","loading","setLoading","idEliminar","setIdEliminar","handleClose","set","update","error","mostrarModal","handleDelete","obtenerTareas","onSnapshot","querySnapshot","docs","forEach","push","Modal","animation","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","onClick","delete","Spinner","role","map","tarea","Card","Text","class","App","Container","fluid","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72e12b19.chunk.js","sourcesContent":["\n\n\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore'\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCRGOxScR4Z2MNKlN-_sKcTxGJxmbgPAM0\",\n    authDomain: \"crud-tareas-246ab.firebaseapp.com\",\n    projectId: \"crud-tareas-246ab\",\n    storageBucket: \"crud-tareas-246ab.appspot.com\",\n    messagingSenderId: \"849120399047\",\n    appId: \"1:849120399047:web:26cab1648e45307053b8e2\"\n  };\n  // Initialize Firebase\nconst fb = firebase.initializeApp(firebaseConfig);\nexport const db = fb.firestore()","\n\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n// componentes boostrap\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\n\nimport { db } from '../config/firebase'\n\n\nexport default function Formulario(props) {\n\n    console.log(props)\n\n\n\n    const valoresIniciales = {\n        titulo: '',\n        descripcion: '',\n    }\n\n    const [valores, setValores] = useState(valoresIniciales);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        props.agregarTarea(valores)\n        setValores({...valoresIniciales})\n    }\n\n    const handleChange = e => {\n        console.log(e.target)\n        const { name, value } = e.target;\n        setValores({ ...valores, [name]: value })\n        console.log(valores)\n    }\n\n\n    const obtenerMedianteId = async (id) =>{\n        const doc = await db.collection('Tareas').doc(id).get();\n        setValores({...doc.data()})\n    }\n\n    useEffect(()=>{\n        console.log(props.idActual);\n        if (props.idActual === \"\"){\n            setValores({...valoresIniciales});\n        }else{\n            obtenerMedianteId(props.idActual); \n        }\n    }, [props.idActual]);\n\n\n\n    return (\n\n        <Col className=\"col-12 col-md-4 mt-md-4\">\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mt-2\">\n                    <Form.Label className=\"fw-bolder text-muted\">Titulo:</Form.Label>\n                    <Form.Control \n                    className=\"bg-dark text-white\"\n                    autoComplete=\"off\"\n                    required\n                    type=\"text\" \n                    name=\"titulo\" \n                    value={valores.titulo} \n                    onChange={handleChange} />\n                </Form.Group>\n                <Form.Group className=\"mt-2\">\n                    <Form.Label className=\"fw-bolder text-muted\">Descripci√≥n:</Form.Label>\n                    <Form.Control \n                    className=\"bg-dark text-white\"\n                    autoComplete=\"off\"\n                    required\n                    type=\"text\" \n                    name=\"descripcion\" \n                    value={valores.descripcion} \n                    onChange={handleChange} />\n                </Form.Group>\n                <Form.Group className=\"text-center\">\n                    <Button \n                    type=\"submit\"\n                    variant=\"info\" \n                    className=\"mt-4\" \n                    size=\"lg\" \n                    block>\n                        {props.idActual === '' ? 'Guardar' : 'Actualizar'}\n                    </Button>\n                </Form.Group>\n            </Form>\n        </Col>\n    )\n}","\n\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\n// db firebase\n\nimport { db } from '../config/firebase.js'\n\n// componentes\nimport Formulario from './formulario.js';\n\n// componentes bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/esm/Button';\nimport Modal from 'react-bootstrap/Modal'\nimport Spinner from 'react-bootstrap/Spinner'\n\n\n// styles\n\nimport '../scss/tablero.scss';\n\n\nexport default function Tablero() {\n\n    const [tareas, setTareas] = useState([])\n    const [idActual, setidActual] = useState('')\n    const [show, setShow] = useState(false);\n\n    const [loading, setLoading] = useState(true);\n\n    const [idEliminar, setIdEliminar] = useState()\n    const handleDelete = (id) => { setIdEliminar(id) }\n\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n\n    const agregarTarea = async (valores) => {\n        try {\n            if (idActual == '') {\n                await db.collection('Tareas').doc().set(valores);\n            }\n            else {\n                await db.collection('Tareas').doc(idActual).update(valores);\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    const mostrarModal = (id) => {\n        console.log(\"tocaste\")\n        handleShow()\n        handleDelete(id)\n    };\n\n\n    const eliminarTarea = () => {\n        db.collection(\"Tareas\").doc(idEliminar).delete();\n        handleClose()\n    };\n\n\n    const obtenerTareas = async () => {\n        db.collection('Tareas').onSnapshot((querySnapshot) => {\n            const docs = [];\n            querySnapshot.forEach((doc) => {\n                docs.push({ ...doc.data(), id: doc.id });\n            });\n            setTareas(docs)\n            setLoading(false)\n        });\n    };\n\n    useEffect(() => {\n        obtenerTareas();\n    }, []);\n\n\n    return (\n        <>\n            <>\n                <Modal\n                    animation={false}\n                    show={show}\n                    onHide={handleClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Eliminar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        ¬øEstas seguro que quieres eliminar esta tarea?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Cerrar\n                        </Button>\n                        <Button variant=\"danger\" onClick={eliminarTarea}>Eliminar</Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n            <h2 className=\"text-center text-info mt-4 fw-bold\">CRUD TAREAS</h2>\n            <Formulario {...{ agregarTarea, obtenerTareas, idActual }} />\n            <Col\n                className=\"col-12 col-md-8 d-flex flex-wrap justify-content-center mt-4 \"\n                key={tareas.id}>\n                {\n                    loading ?\n                        <div className=\"col-12 mt-5 text-center\">\n                            <Spinner animation=\"border\" role=\"status\" variant=\"info\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        </div>\n                        :\n                        \n                        tareas.map(tarea => (\n                            <Card className=\"col-12 mt-3 border border-1 border-dark\">\n                                <Card.Body>\n                                    <Card.Title className=\"text-info fw-bold\">{tarea.titulo}</Card.Title>\n                                    <Card.Text className=\"text-muted\">\n                                        {tarea.descripcion}\n                                    </Card.Text>\n                                    <Button\n                                        className=\"m-2\"\n                                        size=\"sm\"\n                                        variant=\"warning\"\n                                        onClick={() => setidActual(tarea.id)}\n                                    >\n                                        <i class=\"far fa-edit\"></i>\n                                    </Button>\n                                    <Button\n                                        variant=\"danger\"\n                                        size=\"sm\"\n                                        onClick={() => mostrarModal(tarea.id)}\n                                    >\n                                        <i class=\"far fa-trash-alt\"></i>\n                                    </Button>\n                                </Card.Body>\n                            </Card>\n                        ))}\n            </Col>\n        </>\n    )\n\n}\n\n\n\n\n\n\n\n\n","\nimport React from 'react';\n\n\n// compoenentes boostrap\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\n\n// componentes \nimport Tablero from './components/tablero';\nimport './scss/custom.css';\n\n\nfunction App() {\n  return (\n    <Container className=\"app\" fluid=\"md\">\n      <Row>\n        <Tablero />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// importar bootstrap\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}