{"version":3,"sources":["config/firebase.js","components/formulario.js","components/tarea.js","components/tablero.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Formulario","props","validationSchema","Yup","shape","titulo","required","descripcion","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","console","log","setidActual","valoresIniciales","useState","valores","setValores","handleChange","e","target","name","value","obtenerMedianteId","id","a","collection","doc","get","data","useEffect","idActual","Col","className","Form","onSubmit","JSON","stringify","agregarTarea","Group","Label","Control","autoComplete","type","onChange","FormText","message","Button","variant","size","block","onClick","Tarea","modal","setId","Card","Body","Title","Text","class","Tablero","tareas","setTareas","show","setShow","loading","setLoading","idEliminar","setIdEliminar","handleClose","set","update","error","mostrarModal","handleDelete","obtenerTareas","onSnapshot","querySnapshot","docs","forEach","push","Modal","animation","onHide","backdrop","keyboard","Header","closeButton","Footer","delete","Spinner","role","map","tarea","App","Container","fluid","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31557636.chunk.js","sourcesContent":["\n\n\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore'\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCRGOxScR4Z2MNKlN-_sKcTxGJxmbgPAM0\",\n    authDomain: \"crud-tareas-246ab.firebaseapp.com\",\n    projectId: \"crud-tareas-246ab\",\n    storageBucket: \"crud-tareas-246ab.appspot.com\",\n    messagingSenderId: \"849120399047\",\n    appId: \"1:849120399047:web:26cab1648e45307053b8e2\"\n  };\n  // Initialize Firebase\nconst fb = firebase.initializeApp(firebaseConfig);\nexport const db = fb.firestore()","\n\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n// componentes boostrap\nimport Form from 'react-bootstrap/Form'\nimport { FormText } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\n\n// firebase\nimport { db } from '../config/firebase'\n\n// react hook + yup\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\n\n\nexport default function Formulario(props) {\n\n    const validationSchema = Yup.object().shape({\n        titulo: Yup.string().required('El titulo de la tarea es obligatorio'),\n        descripcion: Yup.string().required('La descripcion de la tarea es obligatoria')\n      });\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors }\n      } = useForm({\n        resolver: yupResolver(validationSchema)\n    });\n\n    const onSubmit = data => {\n        console.log(JSON.stringify(data, null, 2));\n        // e.preventDefault()\n        props.agregarTarea(valores)\n        setValores({...valoresIniciales})\n    };\n\n\n    \n    console.log(props.setidActual)\n    const valoresIniciales = {\n        titulo: '',\n        descripcion: '',\n    }\n\n    const [valores, setValores] = useState(valoresIniciales);\n\n    const handleCancel = () =>{\n        reset()\n        props.setidActual('')\n    }\n\n\n    const handleChange = e => {\n        console.log(e.target)\n        const { name, value } = e.target;\n        setValores({ ...valores, [name]: value })\n        console.log(valores)\n    }\n\n\n    const obtenerMedianteId = async (id) =>{\n        const doc = await db.collection('Tareas').doc(id).get();\n        setValores({...doc.data()})\n    }\n\n    useEffect(()=>{\n        console.log(props.idActual);\n        if (props.idActual === \"\"){\n            setValores({...valoresIniciales});\n        }else{\n            obtenerMedianteId(props.idActual); \n        }\n    }, [props.idActual]);\n\n\n\n    return (\n\n        <Col className=\"col-12 col-md-4 mt-md-4\">\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mt-2\">\n                    <Form.Label className=\"fw-bolder text-muted\">Titulo:</Form.Label>\n                    <Form.Control \n                    className={`form-control bg-dark text-white ${errors.titulo ? 'is-invalid' : ''}`}\n                    {...register('titulo')}\n                    autoComplete=\"off\"\n                    // required\n                    type=\"text\" \n                    name=\"titulo\" \n                    value={valores.titulo} \n                    onChange={handleChange} />\n                    <FormText className=\"invalid-feedback\">{errors.titulo ?.message}</FormText>\n                </Form.Group>\n                <Form.Group className=\"mt-2\">\n                    <Form.Label className=\"fw-bolder text-muted\">Descripci√≥n:</Form.Label>\n                    <Form.Control \n                    className={`form-control bg-dark text-white ${errors.descripcion ? 'is-invalid' : ''}`}\n                    {...register('descripcion')}\n                    autoComplete=\"off\"\n                    // required\n                    type=\"text\" \n                    name=\"descripcion\" \n                    value={valores.descripcion} \n                    onChange={handleChange} />\n                    <FormText className=\"invalid-feedback\">{errors.descripcion ?.message}</FormText>\n                </Form.Group>\n                <Form.Group className=\"d-flex justify-content-center\">\n                    <Button \n                    type=\"submit\"\n                    variant=\"info\" \n                    className=\"m-3\" \n                    size=\"lg\" \n                    block>\n                        {props.idActual === '' ? 'Guardar' : 'Actualizar'}\n                    </Button>\n                    {\n                        props.idActual &&\n                            <Button \n                            variant=\"danger\" \n                            className=\"m-3\" \n                            size=\"lg\" \n                            onClick={handleCancel}\n                            block>\n                                Cancelar\n                            </Button>\n                    }\n                </Form.Group>\n            </Form>\n        </Col>\n    )\n}","import React from \"react\";\n\n// componentes bootstrap\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/esm/Button\";\n\nexport default function Tarea(props) {\n  \n  const {modal, setId, data} = props\n\n  return (\n    <Card className=\"col-12 mt-3 border border-1 border-dark\">\n      <Card.Body>\n        <Card.Title className=\"text-info fw-bold\">{data.titulo}</Card.Title>\n        <Card.Text className=\"text-muted\">{data.descripcion}</Card.Text>\n        <Button\n          className=\"m-2\"\n          size=\"sm\"\n          variant=\"warning\"\n          onClick={() => setId(data.id)}\n        >\n          <i className=\"far fa-edit\"></i>\n        </Button>\n        <Button\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={() => modal(data.id)}\n        >\n          <i class=\"far fa-trash-alt\"></i>\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n","\n\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\n// db firebase\nimport { db } from '../config/firebase.js'\n\n// componentes\nimport Formulario from './formulario.js';\n\n// componentes bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/esm/Button';\nimport Modal from 'react-bootstrap/Modal'\nimport Spinner from 'react-bootstrap/Spinner'\n\n// tarea\nimport Tarea from './tarea.js'\n\n\nexport default function Tablero() {\n\n    const [tareas, setTareas] = useState([])\n    const [idActual, setidActual] = useState('')\n    const [show, setShow] = useState(false);\n\n    const [loading, setLoading] = useState(true);\n\n    const [idEliminar, setIdEliminar] = useState()\n    const handleDelete = (id) => { setIdEliminar(id) }\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const agregarTarea = async (valores) => {\n        try {\n            if (idActual == '') {\n                await db.collection('Tareas').doc().set(valores);\n            }\n            else {\n                await db.collection('Tareas').doc(idActual).update(valores);\n                setidActual('')\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    const mostrarModal = (id) => {\n        handleShow()\n        handleDelete(id)\n    };\n\n\n    const eliminarTarea = () => {\n        db.collection(\"Tareas\").doc(idEliminar).delete();\n        handleClose()\n    };\n\n\n    const obtenerTareas = async () => {\n        db.collection('Tareas').onSnapshot((querySnapshot) => {\n            const docs = [];\n            querySnapshot.forEach((doc) => {\n                docs.push({ ...doc.data(), id: doc.id });\n            });\n            setTareas(docs)\n            setLoading(false)\n        });\n    };\n\n    useEffect(() => {\n        obtenerTareas();\n    }, []);\n\n\n    return (\n        <>\n            <>\n                <Modal\n                    animation={false}\n                    show={show}\n                    onHide={handleClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Eliminar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        ¬øEstas seguro que quieres eliminar esta tarea?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Cerrar\n                        </Button>\n                        <Button variant=\"danger\" onClick={eliminarTarea}>Eliminar</Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n            <h2 className=\"text-center text-info mt-4 fw-bold\">CRUD TAREAS</h2>\n            <Formulario {...{ agregarTarea, obtenerTareas, idActual, setidActual }} />\n            <Col\n                className=\"col-12 col-md-8 d-flex flex-wrap justify-content-center mt-4 \"\n                key={tareas.id}>\n                {\n                    loading ?\n                        <div className=\"col-12 mt-5 text-center\">\n                            <Spinner animation=\"border\" role=\"status\" variant=\"info\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        </div>\n                        :\n                        tareas.map(tarea => (\n                            <Tarea data={tarea} modal={mostrarModal} setId={setidActual}/>\n                        ))}\n            </Col>\n        </>\n    )\n\n}\n\n\n\n\n\n\n\n\n","\nimport React from 'react';\n\n\n// compoenentes boostrap\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\n\n// componentes \nimport Tablero from './components/tablero';\n\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <Container className=\"app\" fluid=\"md\">\n      <Row>\n        <Tablero />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport './styles/styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}